--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,x,x)local x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=116,49,64,87,66,20,96,62,91,88,84,64,85,97,44,57,57,66,56,41,89,90,78,40,33,47,19,60,92,95,88,79,72,56,27,21,92,79,29,47,43,96,83,26,78,83,55,20,66,20,75,86,88 while x~=79 do if y>=720 then if y>=1083 then if y<=1194 then if y>=1135 then if y<=1135 then cj=function(cm,cm,cm)local cm,cn,co,cp=74,37,30,81,32,14,93,97,24,17,25,21,57,77,38,27 while cm~=39 do if cn<=98 then if cn>=70 then if cn<91 then co=cg()cn=98 else cp=bt:sub(bj,(bj+co-1))cn=140 end else co,cp=nil cn=70 end else if cn<=140 then bj=(bj+co);cn=171 else if cn<205 then cn=208 return cp;else cm=39;end end end end end y=1158 else if y>1163 then y=1213 bm={}else y=1194 do bf=function(...)return{...},bz('#',...)end end end end else if y>1088 then y=1135 bk=function()local cm,cn,co,cp,cq,cr,cs,ct=48,37,10,98,57,49,85,17,76,40,45,79,54,76,12,68,80,72,58 while cm~=36 do if cn>=189 then if cn<=242 then if cn>=216 then if cn>224 then cs=1 cn=282 else cn=242 ct=(by(0,cq,20)*4294967296+co)end else do cp=by(20,cq,11)end cn=216 end else if cn>=300 then if cn>305 then cm=36;else cn=343 do return(cr*(2^(cp-1023))*(ct/cf+cs))end end else if not(cp~=0)then if 0~=ct then cp=1 do cs=0 end else return(cr*0)end elseif not(cp==2047)then else if not(ct~=0)then do return(cr*(0/o))end else return(cr*(1/0))end end cn=300 end end else if cn>=113 then if cn<=113 then cq=cg()cn=129 else if cn<160 then cn=166 if((co==0 and cq==0))then return 0 end else cr=((-1)^by(31,cq,1))cn=189 end end else if cn>41 then cn=113 co=cg()else cn=75 co,cp,cq,cr,cs,ct=nil end end end end end else y=1100 do bn=function()local o,cm do o,cm=bh(bt,bj,(bj+2))end bj=(bj+2);return((cm*256)+o);end end end end else if y<=1278 then if y<=1213 then be=function(o,cm)local cm,cn,co,cp,cq,cr,cs,ct=86,29,20,47,15,50,71,31,79,78,89,46,58,99,89,95,88,81,12,70,27,53,14,67,33 while cm~=38 do if cn>=326 then if cn<=418 then if cn<=349 then if cn>335 then ct[101]=cr;cn=379 else for cu=1,cg()do cr[cu-1]=be();end cn=349 end else if cn<409 then cq=cg()cn=418 else do cs={}end cn=439 end end else if cn>=504 then if cn<=504 then ct[90]=ba();cn=520 else if cn<563 then cn=565 return ct;else cm=38;end end else if cn>443 then cn=504 ct[14]=cs else for cm=1,cq do local cu,cv,cw,cx=76,53,11,63,13,16,36,55,56,81,35,98,41,38 while cu~=33 do if cv>=171 then if cv>=188 then if cv<230 then cv=234 cs[cm]=cx;else cu=33;end else if(3==cw)then cx=(0~=ba());elseif(not(cw~=v))then cx=bk();elseif(4==cw)then cx=cj();elseif(2==cw)then do cx=o[cj()];end end;cv=188 end else if cv>=102 then if cv<137 then cv=142 do cw=ba()end else cx=nil cv=171 end else cw,cx=nil cv=102 end end end end cn=458 end end end else if cn<=154 then if cn<=78 then if cn<75 then co,cp,cq,cr,cs,ct=nil cn=78 else cn=118 co={}end else if cn>125 then cn=184 ct={}else cn=154 cr={}end end else if cn<=226 then if cn>191 then cn=251 for o=(#bm+1),(#bm+cp)do local v,cm,cq,cr,cs=74,60,59,60,60,67,20,11,32,44,96,59,25,82,97,27,76,76,64,50,12,65,84,83 while v~=54 do if cm<=316 then if cm<=175 then if cm<=94 then if cm<89 then cq,cr,cs=nil cm=94 else cq={}cm=139 end else if cm<171 then cq[126]=ba();cm=175 else cm=200 cr=cg()end end else if cm<=248 then if cm<246 then cm=248 cs=cg()else cq[45]=ba();cm=281 end else if cm<314 then cm=316 cq[49]=cl(cr,1,2);else cm=332 cq[85]=cl(cs,1,11);end end end else if cm<=393 then if cm<=349 then if cm<347 then cq[179]=cl(cr,3,11);cm=349 else cq[84]=cl(cr,b,20);cm=370 end else if cm<384 then cq[98]=cl(cr,21,29);cm=393 else cq[160]=cl(cs,12,33);cm=415 end end else if cm>=486 then if cm>489 then v=54;else cm=518 bm[o]=cq;end else if cm>417 then cq[38]=-cq[98]cm=486 else cm=444 cq[120]=-cq[179]end end end end end end else cn=226 cp=cg()end else if cn>255 then cn=326 ct[189]=co;else for b=1,cg()do local o,v,cm,cp,cq,cr=63,65,21,46,80,69,69,48,50,78,84,37,58,75,57,14,52,17,13,93,47,72,59,77,63,35 while o~=52 do if v>=369 then if v>=501 then if v<=550 then if v<543 then v=550 cm[45]=cl(cp,12,20);else v=596 cm[120]=-cm[179]end else if v>=620 then if v<643 then v=650 co[b]=cm;else o=52;end else cm[38]=-cm[98]v=620 end end else if v<=407 then if v<398 then v=407 cm[85]=cl(cr,1,11);else v=433 cm[179]=cl(cp,3,11);end else if v>438 then v=501 cm[98]=cl(cp,21,29);else v=457 cm[160]=cl(cr,12,33);end end end else if v<=170 then if v>=128 then if v>137 then v=185 cm[196]={};else v=170 do cm[126]=ba();end end else if v<92 then v=95 cm,cp,cq,cr=nil else cm={{},nil}v=128 end end else if v<=214 then if v>190 then v=253 do cp=cg()end else do if not(ba()~=1)then for b=1,ba()do cm[196][b]={ba()==0,cg()}end end end v=214 end else if v<=253 then cr=cg()v=287 else if v>291 then v=369 do cm[49]=cq end else do cq=cl(cp,d,2)end v=332 end end end end end end end cn=295 end end end end end end y=1229 else if y>1236 then do bo={}end y=1301 else y=1278 ch={}end end else if y>=1344 then if y>1350 then x=79;else y=1370 return ce(be(bi()),{},bi())();end else ce=function(b,d,o,v,v)local v,x,cm,cn,co do v=b[14]end do x=b[q]end cm=ch co=b[101]cn=b[90]return function(...)local b,q,cm,cp,cq,cr,cs,ct,cu cq=1 cp=-1 q=-1 b={}cu={...}do ct=(bz('#',...)-1)end cr={}cm={}for q=0,ct do do if(not(q<cn))then b[(q-cn)]=cu[(q+1)];else cm[q]=cu[(q+1)];end;end end;do cs=(ct-cn+1)end while true do local b,q,cn,cs,ct,cu,cv,cw,cx,cy cy=x[cq]cn=cy[85]do cu=cy[126]end do cx=cy[179]end ct=cy[84]q=cy[98]cs=cy[45]cv=cy[120]cw=cy[160]do b=cy[38]end if not(cn>23)then if not(cy[85]<12)then do if not(cn>17)then if not(cn>14)then if not(cy[85]>12)then if not cm[cx]then cq=cw;end;else if(cn>13)then cm[cx]=#cm[cw];else local b do b=cx end cm[b]=cm[b]();end end else if not(cn<16)then if 16==cn then cm[cx]=(0~=cw);else cq=cy[160];end else cm[cx]=(cm[cw]/v[cy[l]]);end end else if not(cn>20)then do if not(cy[85]<19)then if(cn>19)then cm[cx]=ce(co[cw],nil,o);else local b,l,x do l=cy[179]end b={cm[l](cm[l+1])}x=m for m=l,q do do x=(x+1);end cm[m]=b[x];end end else local b,l b=cx do l=cm[cw]end cm[(b+1)]=l;cm[b]=l[v[q]];end end else if not(cn<22)then if not(cn~=22)then while(v[cx]<cm[q])do cq=cw;break end else do cm[cx]=cm[cy[160]][cm[q]];end end else local b,l l=cy[160]b=cm[l]do for m=(l+1),q do b=(b..cm[m]);end;end cm[cx]=b;end end end end else if not(cn<6)then if not(cn<9)then do if not(cn<10)then if(cn>10)then cm[cx]=(cm[cw]-cm[cy[98]]);elseif(cm[q]~=cm[cy[179]])then cq=cw;end else local b,l,m,x do l=cx end x,b=bf(cm[l](bq(cm,(l+1),cw)))cp=(b+l-1)m=0 for b=l,cp do m=(m+1);cm[b]=x[m];end;end end else if not(cn>6)then local b b=cx do cm[b]=cm[b](cm[b+1]);end else if(cn>7)then do if not cm[cy[98]]then cm[cx]=cm[q];cq=cw;end;end else do cm[cx]=d[cw];end end end end else do if not(cy[85]>2)then do if not(cn<1)then if(cn<2)then cm[cx]=cm[cw];else do v=ch[cx](v)end end else do if(v[q]~=cm[cx])then cq=cw;end;end end end else if not(cy[85]>3)then cm[cx][v[cw]]=v[q];else if not(cn~=4)then do cm[cx][cm[cw]]=cm[q];end else do cm[cx]=(cm[cw]-v[cy[98]]);end end end end end end end else if not(cn>35)then if not(cn<30)then if not(cn<33)then if not(cn<34)then if(cy[85]>34)then cm[cy[179]]=v[cw]else cm[cx]=(cm[cw]*v[q]);end else cm[cx]=(cm[cw]+cm[q]);end else if not(cn<31)then if(cn<32)then local b,l,m l=co[cw]do m=nil end b={}m=bc({},{__index=function(x,x)local x=b[x];return x[1][x[2]];end,__newindex=function(x,x,co)local x=b[x]x[1][x[2]]=co;end;});for x=1,cy[98]do local co do co=cy[196][x]end if co[1]then b[(x-1)]={cm,co[2],nil,nil,nil};else b[(x-1)]={d,co[2],nil,nil,nil};end;do cr[(#cr+1)]=b;end end;cm[cx]=ce(l,m,o);else do cm[cx]=(v[cw]+cm[q]);end end else cm[cx][v[cw]]=cm[q];end end else do if not(cn>26)then do if not(cn>24)then cm[cx]=(cm[cw]%v[q]);else if(cn<26)then do cm[cx]=(cm[cw]+v[q]);end else cm[cy[179]]=o[v[cy[160]]];end end end else if not(cn>27)then cm[cx]=cm[cw][v[q]];else if 28==cn then if((cm[cx]<cm[q]))then cq=cw;end;else cm[cx]();end end end end end else if not(cy[85]>41)then if not(cn<39)then if not(cn>39)then cm[cx]={};else if 40==cn then local b,d,l l=cx b=cm[(l+2)]d=(cm[l]+b)cm[l]=d;if((b>0))then if(not(d>cm[l+1]))then do cq=cw;end do cm[(l+3)]=d;end end elseif(not(d<cm[l+1]))then do cq=cw;end cm[(l+3)]=d;end else local b b=cx cm[b]=cm[b](bq(cm,b+1,cp));end end else do if not(cn<j)then do if(cn<38)then do return cm[cx]end else do if cm[cx]then cq=cw;end;end end end else local b do b=cy[179]end do cm[b](cm[(b+1)])end end end end else if not(cn<45)then if not(cn>45)then local b b=cx cm[b]=cm[b](bq(cm,b+1,cw));else do if(cn>46)then local b,d,j j=cx d=cm[j]b=cy[160]for l=h,b do d[l]=cm[(j+l)]end;else local b do b=cx end do cm[b](bq(cm,(b+1),cy[160]))end end end end else do if not(cy[85]<43)then if(cy[85]<44)then cm[cx]=nil;else local b b={}if(#cr>0)then for d=f,#cr do local f f=cr[d]for d=0,#f do local h,j,l l=f[d]j=l[1]h=l[2]while j==cm and h>=0 do b[h]=j[h]l[1]=b break end end end end do return cm[cx],cy[q];end end else local b,d,f do d=cx end b=cm[d]f=cm[(d+2)]do if((f>0))then if((b>cm[d+1]))then cq=cw;else cm[(d+3)]=b;end elseif((b<cm[d+1]))then cq=cw;else do cm[(d+3)]=b;end end end end end end end end end cq=(cq+1);end;end;end y=1344 end end end else if y>=888 then if y<=961 then if y<=888 then y=922 do by=function(b,d,f,h)local h,j,l=65,42,96,55,39,73,42,32,40,58,23,52 while h~=25 do if j>=166 then if j>=190 then if j>192 then break else j=218 return l end else j=190 do l=(l-l%1)end end else if j<=42 then l=nil j=88 else if j<130 then l=nil j=136 else do l=((d/bs[b])%bs[f])end j=166 end end end end end end else if y>924 then cl=function(b,d,f,h,h)local h h=((b/2^(d-1))%2^((f-1)-(d-1)+1))return(h-h%1);end y=984 else y=961 bd=(bit_lib and bit_lib.bxor or function(b,d)b=b%(2^32)d=d%(2^32)local f,h=0,1 while b>0 and d>0 do local j,l=b%p,d%16 f=f+ck[j+1][l+1]*h b=(b-j)/16 d=(d-l)/16 h=h*16 end f=f+b*h+d*h return f end)end end else if y>=1033 then if y>1038 then ba=function()local b b=bh(bt,bj,bj)bj=(bj+1);return b;end y=1083 else y=1053 cg=function()local b,d,f,h b,d,f,h=bh(bt,bj,(bj+n))bj=(bj+4);return((h*16777216)+(f*i)+(d*256)+b);end end else y=1033 bj=a end end else if y>=789 then if y<=789 then bs={[0]=1}y=826 else if y>832 then y=888 for a=1,31 do bs[a]=cd cd=(cd*2)end else y=865 cd=2 end end else if y<752 then y=759 ca=''else do cf=(2^52)end y=789 end end end end else if y<=356 then if y>=215 then if y<=258 then if y<=215 then bw=string.rep y=236 else if y>240 then cc=table.insert y=289 else y=258 bv=table.concat end end else if y>=338 then if y>347 then bc=setmetatable y=391 else y=356 bi=(getfenv or function()return _ENV end)end else cb=math.ldexp y=338 end end else if y>=110 then if y<=110 then z=string.char y=125 else if y<162 then bu=string.sub y=167 else y=215 bb=string.gsub end end else if y>58 then do bh=string.byte end y=110 else y=74 z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl=nil end end end else if y<=538 then if y>=464 then if y>=495 then if y<530 then y=538 bx=math.abs else bg=math.floor y=574 end else y=495 bp=(function(a,b,b)if not(br(a)~='number')then return true else return false end end)end else if y<414 then bz=select y=420 else do br=type end y=464 end end else if y>=631 then if y>=660 then if y<686 then y=689 bt=bb('','..',function(a,b)return ci[bl(a,16)]end)else do ck={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,t,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,c,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,w,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,g,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,s,12,3,e,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,r,3,2,},{14,15,12,13,u,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,k,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil,nil}end y=720 end else y=660 for a=0,255 do ci[a]=z(a);end end else if y<=574 then bq=(unpack or table.unpack)y=595 else if y<606 then y=615 bl=tonumber else ci={}y=631 end end end end end end end end)(1,12,6,1,2,1,9,1,65536,37,12,98,0,3,0,16,189,0,13,11,10,1,9)
