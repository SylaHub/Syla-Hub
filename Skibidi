--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

do return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,r,s,t,u,v,w,x,y)local y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=106,81,19,50,52,41,67,64,51,90,19,82,31,24,30,27,66,60,87,54,71,42,38,53,16,22,64,85,16,54,75,36,85,99,79,41,10,54,18,78,74,70,45,94,83,85,23,14,14,58 while y~=81 do if z>=829 then if z>=1189 then if z>=1391 then if z<=1429 then if z>=1409 then if z>1417 then br={}z=1460 else z=1429 bi={}end else z=1409 bl=function(cn,co)local co,cp,cq,cr,cs,ct,cu,cv=83,50,70,27,20,40,20,31,65,15,77,61,21,76,27,11,28,57,94,84,31,55,83,45 while co~=55 do if cp>=290 then if cp<=383 then if cp>=340 then if cp<378 then cp=383 for cw=1,bw()do local cx,cy,cz,da,db,dc=86,59,58,72,31,81,52,95,51,96,79,36,98,83,84,68,87,85,76,46,29,39,17,17 while cx~=50 do if cy<=344 then if cy>=183 then if cy<=229 then if cy>187 then da=bw()cy=250 else do if 1==bs()then do for dd=1,bs()do db[115][dd]={bs()==0,bw()}end end end end cy=229 end else if cy>=296 then if cy>300 then db[114]=cz cy=376 else do cz=be(da,1,2)end cy=344 end else cy=296 dc=bw()end end else if cy>=111 then if cy>116 then cy=183 db[115]={};else cy=147 db[v]=bs();end else if cy>63 then cy=111 do db={{},nil,nil}end else cz,da,db,dc=nil cy=78 end end end else if cy>=471 then if cy>=556 then if cy<=556 then db[j]=-db[142]cy=605 else if cy>614 then cx=50;else cy=636 cs[cw]=db;end end else if cy<506 then db[61]=be(da,12,20);cy=514 else cy=556 db[87]=-db[71]end end else if cy>=440 then if cy>447 then db[142]=be(da,21,29);cy=471 else cy=456 db[4]=be(dc,12,33);end else if cy<394 then db[25]=be(dc,1,11);cy=398 else db[71]=be(da,3,11);cy=440 end end end end end end else cp=431 cr[59]=cs;end else if cp<300 then cp=305 do for j=1,cq do local v,cw,cx,cy=76,63,57,11,64,27,80,95,88,77,19,80,70 while v~=41 do if cw<=111 then if cw<=63 then cw=88 cx,cy=nil else if cw>92 then cw=159 do cy=nil end else cx=bs()cw=111 end end else if cw>=187 then if cw<210 then cw=215 ct[j]=cy;else break end else if(not(cx~=4))then cy=(0~=bs());elseif(not(cx~=0))then do cy=bg();end elseif(not(cx~=3))then cy=cl();elseif(t==cx)then do cy=cn[cl()];end end;cw=187 end end end end end else cr[162]=ct cp=340 end end else if cp>=477 then if cp<=477 then cr[172]=cv;cp=495 else if cp<528 then cp=533 return cr;else co=55;end end else if cp<452 then cr[107]=bs();cp=455 else for j=1,bw()do cv[j-m]=bl();end cp=477 end end end else if cp<=159 then if cp>=111 then if cp<154 then cv={}cp=159 else cr={}cp=189 end else if cp<76 then cq,cr,cs,ct,cu,cv=nil cp=80 else cs={}cp=111 end end else if cp>=250 then if cp>259 then ct={}cp=290 else cq=bw()cp=275 end else if cp<219 then cp=227 cu=bw()else for j=(#bd+1),(#bd+cu)do local m,t,v,cn,co=56,68,24,76,71,14,22,53,20,80,23,63,88,38,98,49,72,73,67,11,98,61,59,44 while m~=43 do if t>=346 then if t>=483 then if t>=553 then if t>558 then break else t=602 bd[j]=cn;end else if t<497 then t=505 cn[87]=-cn[71]else cn[185]=-cn[142]t=553 end end else if t>=423 then if t<437 then cn[142]=be(v,21,29);t=441 else t=483 do cn[4]=be(co,12,33);end end else if t<367 then cn[71]=be(v,3,11);t=375 else t=423 cn[65]=be(v,12,20);end end end else if t<=191 then if t<=105 then if t<96 then t=105 v,cn,co=nil else cn={}t=145 end else if t<185 then t=191 do cn[73]=bs();end else t=218 v=bw()end end else if t>=294 then if t<315 then cn[o]=be(v,1,2);t=319 else t=346 cn[25]=be(co,1,11);end else if t>224 then t=294 cn[61]=bs();else co=bw()t=253 end end end end end end cp=250 end end end end end end end else if z>=1507 then if z>1513 then y=81;else z=1540 return bp(bl(ck()),{},ck())();end else bp=function(j,m,m,o)local o,t,v,y,cn cn=j[107]y=bi do v=j[162]end o=j[59]t=j[172]return function(...)local j,y,co,cp,cq,cr,cs,ct,cu do cq=1 end do cp=-1 end do cs=-1 end cu={}y={...}co=(bt('#',...)-1)ct={}j={}do for cs=0,co do if(not(cs<cn))then cu[(cs-cn)]=y[(cs+1)];else j[cs]=y[(cs+1)];end;end;end cr=(co-cn+1)do while true do local y,cn,co,cr,cs,cu,cv,cw,cx,cy cy=o[cq]cn=cy[25]y=cy[73]cw=cy[71]do cu=cy[65]end do cx=cy[142]end do cv=cy[61]end cr=cy[87]co=cy[4]cs=cy[185]if not(cn>23)then if not(cy[25]>11)then if not(cn>5)then if not(cn<3)then if not(cn<4)then if 4==cn then if(not(j[cw]==j[cx]))then cq=co;end;else local o do o=cw end do j[o](j[(o+1)])end end else do j[cw]=#j[cy[4]];end end else if not(cn<1)then if(cn<2)then local o do o=cy[71]end j[o]=j[o]();else local o,y do o=cw end y=j[cy[4]]j[(o+1)]=y;j[o]=y[v[cx]];end else local o,y o=co do y=j[o]end for cr=(o+1),cx do do y=(y..j[cr]);end end;j[cw]=y;end end else do if not(cn<9)then if not(cy[25]<10)then if 10==cn then j[cw]=m[v[co]];else if not j[cw]then cq=co;end;end else if(v[cx]~=j[cy[71]])then cq=cy[4];end;end else if not(cn>6)then do if j[cw]then do cq=co;end end;end else if(cy[25]<8)then j[cw]=(j[co]*v[cy[142]]);elseif((j[cw]<j[cy[142]]))then cq=cy[4];end end end end end else if not(cn<18)then if not(cn>20)then if not(cn>18)then j[cw]=(j[co]+v[cy[142]]);else if not(cn~=19)then local o,y,cr y=cw cr=j[y]o=j[(y+2)]if((o>0))then if((cr>j[y+1]))then cq=co;else j[(y+3)]=cr;end elseif((cr<j[y+1]))then cq=co;else j[(y+3)]=cr;end else j[cy[71]]=nil;end end else if not(cy[n]<22)then if 22==cn then j[cw]=bp(t[co],nil,m);else local n,o,t,y o=cw do t,n=bc(j[o](cg(j,(o+1),cy[4])))end cp=(n+o-1)do y=0 end for n=o,cp do do y=(y+1);end j[n]=t[y];end;end else j[cw]=j[cy[4]][j[cx]];end end else if not(cn>14)then if not(cn<13)then if(cn>13)then j[cw]=(j[co]/v[cx]);else local n,o,t n=cw t={j[n](cg(j,n+1,cp))}o=0 for y=n,cx do o=(o+1);j[y]=t[o];end end else do do return j[cw]end end end else if not(cn<16)then if not(cn~=16)then do m[v[co]]=j[cw];end else local m,n,o,t o=cw t,m=bc(j[o](j[(o+1)]))do cp=(m+o-1)end n=0 do for m=o,cp do n=(n+1);do j[m]=t[n];end end;end end else local m do m=cy[71]end j[m](cg(j,(m+1),cp))end end end end else if not(cn<36)then if not(cn>41)then if not(cn<39)then do if not(cn<40)then if(cy[25]>40)then local m,n,o do n=cy[71]end o={j[n](j[n+1])}m=0 for t=n,cx do m=(m+1);j[t]=o[m];end else local m m={}if(#ct>r)then for n=1,#ct do local o o=ct[n]for n=0,#o do local r,t,y y=o[n]t=y[1]r=y[2]if(t==j and r>=0)then m[r]=t[r]y[1]=m end end end end return 0;end else j[cw]=(j[co]-j[cx]);end end else do if not(cn>36)then j[cw][j[co]]=j[cy[142]];else if 37==cn then if((v[cw]<j[cx]))then cq=co;end;else do j[cw][v[co]]=j[cx];end end end end end else do if not(cn<45)then if not(cn>46)then if 45==cn then local m,n,o n=cy[71]o=j[(n+2)]m=(j[n]+o)j[n]=m;if((o>0))then if(not(m>j[n+w]))then cq=co;j[(n+3)]=m;end elseif(not(m<j[n+1]))then cq=co;j[(n+3)]=m;end else j[cw][v[co]]=v[cx];end else if(cn<48)then cq=cy[4];else local m do m=cw end j[m]=j[m](j[m+1]);end end else if not(cy[25]<43)then do if(cy[25]<44)then j[cw]=(j[co]%v[cy[142]]);else j[cw]=j[cy[4]][v[cx]];end end else local m,n,o,r,t n=cw t=cx o=(n+2)r={j[n](j[n+1],j[o])}for w=i,t do j[(o+w)]=r[w]end m=j[(n+3)]if m then j[o]=m else cq=co;end;end end end end else if not(cn>29)then if not(cn<27)then if not(cn<28)then if not(cn~=28)then j[cw]=(0~=co);else do j[cy[71]]={};end end else local i,m,n i=cw do n=j[i]end m=co for o=1,m do n[o]=j[(i+o)]end;end else if not(cn<g)then if(cy[25]>25)then local g g=cy[71]j[g]=j[g](cg(j,g+1,co));else if(v[cx]==j[cw])then cq=co;end;end else j[cw]=(j[co]+j[cx]);end end else if not(cn<33)then if not(cy[25]<34)then if(cn<u)then do j[cw]=v[co]end else local g do g=cw end j[g](cg(j,(g+1),co))end else local g g=cy[71]j[g]=j[g](cg(j,g+1,cp));end else do if not(cn<31)then if(cn<32)then v=bi[cy[71]](v)else do j[cw]=j[co];end end else j[cw]();end end end end end end cq=(cq+1);end;end end;end z=1507 end end else if z<=1228 then if z<1225 then ca=function()local g,i do i,g=by(cb,cf,(cf+2))end cf=(cf+2);return((g*256)+i);end z=1228 else bg=function()local g,i,j,m,n,o,r,t=89,36,43,68,13,57,75,82,13,72,75,11,44,52,83,24,59,14,10 while g~=44 do if i<=172 then if i>=107 then if i<=107 then i=130 do t=bw()end else if i>135 then n=((-k)^ch(31,t,1))i=202 else if((m==0 and t==0))then do return x end end i=172 end end else if i>45 then m=bw()i=107 else j,m,n,o,r,t=nil i=68 end end else if i>=300 then if i<=300 then i=333 if not(r~=0)then if not(o==0)then do r=1 end j=0 else return(n*0)end elseif not(r==2047)then else if not(o~=0)then do do return(n*(0/0))end end else return(n*(1/0))end end else if i>339 then g=44;else i=369 return(n*(a^(r-1023))*(o/bm+j))end end else if i>=241 then if i>249 then i=300 j=1 else o=(ch(0,t,20)*4294967296+m)i=259 end else r=ch(20,t,11)i=241 end end end end end z=1270 end else if z>=1312 then if z>1318 then bd={}z=1391 else do bc=function(...)return{...},bt('#',...)end end z=1349 end else cl=function(a,a,a)local a,g,i,j=53,64,86,21,91,57,32,25,18,41,79,86,33 while a~=31 do if g>=155 then if g>=196 then if g>204 then a=31;else g=227 return i;end else cf=(cf+j);g=196 end else if g<=64 then g=86 i,j=nil else if g>88 then i=cb:sub(cf,(cf+j-1))g=155 else g=128 do j=bw()end end end end end end z=1312 end end end else if z>=1000 then if z<=1073 then if z<=1000 then z=1046 ch=function(a,g,i,j)local j,k,m=64,48,92,27,59,61,92,63,56,97,21,79 while j~=34 do if k<=117 then if k<=48 then k=79 m=nil else if k<108 then do m=nil end k=117 else m=((g/ci[a])%ci[i])k=147 end end else if k>=167 then if k<177 then k=183 do return m end else break end else m=(m-m%1)k=167 end end end end else if z<1066 then cj=(bit_lib and bit_lib.bxor or function(a,g)a=a%(2^32)g=g%(2^32)local i,j=0,1 while a>0 and g>0 do local k,m=a%16,g%16 i=i+bf[k+s][m+1]*j a=(a-k)/16 g=(g-m)/16 j=j*16 end i=i+a*j+g*j return i end)z=1073 else z=1107 be=function(a,g,i,j,j)local j j=((a/2^(g-1))%2^((i-1)-(g-1)+1))return(j-j%1);end end end else if z>=1123 then if z<1159 then z=1163 bw=function()local a,g,i,j g,a,j,i=by(cb,cf,(cf+3))cf=(cf+4);return((i*16777216)+(j*65536)+(a*256)+g);end else bs=function()local a a=by(cb,cf,cf)do cf=(cf+1);end return a;end z=1189 end else cf=1 z=1123 end end else if z<=873 then if z>831 then z=906 do bm=(b^52)end else cd=''z=873 end else if z>=933 then if z<961 then z=969 bv=2 else z=1000 do for a=1,31 do ci[a]=bv bv=(bv*2)end end end else z=933 ci={[h]=1}end end end end else if z>=418 then if z<=569 then if z<=452 then if z<443 then z=452 bt=select else bu=type z=497 end else if z>=538 then if z<563 then cc=math.abs z=569 else bq=math.floor z=603 end else z=538 cm=(function(a,b,b)do if not(bu(a)~='number')then return true else return false end end end)end end else if z>=721 then if z>=742 then if z>750 then bf={{0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,},{1,0,3,2,c,4,7,6,9,8,11,10,13,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,12,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,d,12,15,14,9,8,11,10,},{6,7,4,5,2,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,e,2,1,0,15,14,13,12,11,10,q,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,p,7,},{9,8,11,10,13,12,15,14,1,0,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,l,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,4,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,f,0,},nil,nil}z=829 else cb=bhfunction(a,b,b,b)return bb[ba(a,16)]end)z=783 end else for a=0,255 do bb[a]=bz(a);end z=742 end else if z>=649 then if z<680 then ba=tonumber z=688 else z=721 bb={}end else cg=(unpack or table.unpack)z=649 end end end else if z>=214 then if z<=275 then if z<=214 then bk=string.rep z=234 else if z<267 then z=275 do bn=table.concat end else do bx=table.insert end z=316 end end else if z<=316 then z=349 ce=math.ldexp else if z>356 then do bo=setmetatable end z=418 else do ck=(getfenv or function()return _ENV end)end z=377 end end end else if z>=141 then if z<=141 then z=166 do bz=string.char end else if z<190 then do bj=string.sub end z=194 else z=214 do bh=string.gsub end end end else if z<91 then ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce,cf,cg,ch,ci,cj,ck,cl,cm=nil z=100 else z=141 by=string.byte end end end end end end end)(2,2,5,13,3,1,25,0,1,185,1,7,1,25,114,6,9,0,1,2,35,73,1,0)end
