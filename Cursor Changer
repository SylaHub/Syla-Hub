--[[
          ...                               .---:                                                                                             
         .%%%-                             *%%%#*                                                 :===                                        
         .%%%-    .::.  ... ...      ... .=%%%:.. ...     ..     .:.        .:..       .:.  ...  .=%%#..     ..:.      ...  .:                
         .%%%-  =#%%%%%*%%% -%%#    -%%#.*%%%%%%*.%%%.   *%%+ .*%%%%%+   -*%%%%%#=  :*%%%%%*%%%-.%%%%%%%: .+#%%%%%*-  :%%%:#%%:               
         .%%%- *%%#-::=#%%%  =%%*  .#%%: .=%%#....%%%.   *%%+ =%%#      *%%*-::=*=.:%%%=::-*%%%- .=%%#.. :%%%=::-#%%+ :%%%#+--                
         .%%%-.%%%:    :%%%   *%%= *%%-   -%%#   .%%%.   *%%+  +#%%#*- .%%%.       +%%+     #%%-  -%%#   *%%=    .%%%.:%%%:                   
    :=: .=%%%. #%%+   .*%%%    #%%*%%=    -%%#   .%%%-  .#%%+      *%%+ #%%=   :-. =%%#:   -%%%-  -%%#   =%%#.   +%%# :%%%                    
   -%%%%%%%%-  .*%%%##%%%%%    .#%%%+     -%%#    +%%%##%#%%+ =%%#*#%%- .*%%%#%%%*. =%%%##%%%%%-  .#%%%#: =#%%%#%%%+. :%%%                    
     :====:      .-===:.---     =%%*      .---     .-==-.:--:  .-===-      -===-.     :===- ---.    -==-    :-===:    .---                    
                               :%%#.                                                                                                          
                               ===.                                                                                                           
--]]

-- Jayfuscator V1.2.1 --

return(function(a,b,c,d,e,f,g,h,i,j,k,l,m,n,o,p,q,q,q)local q,r,s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce=122,58,33,88,46,99,86,81,13,76,39,89,11,85,88,86,91,83,55,50,40,35,26,64,70,92,89,88,75,57,56,14,60,77,60,95,63,20,69,49,22,29,17,84,40,98,98,29,93,57,47,11,50,99 while q~=81 do if r<=639 then if r>=354 then if r>=485 then if r>=578 then if r<=578 then for cf=0,b do bq[cf]=bw(cf);end r=597 else if r<635 then ce=bffunction(b,cf,cf)return bq[bg(b,16)]end)r=639 else s={{0,1,g,3,4,5,6,7,o,9,10,11,12,13,14,15,},{1,0,3,2,5,4,7,6,9,8,11,p,i,12,15,14,},{2,3,0,1,6,7,4,5,10,11,8,9,14,15,12,13,},{3,2,1,0,7,6,5,4,11,10,9,8,15,14,13,12,},{4,5,6,7,0,1,2,3,e,13,14,15,8,9,10,11,},{5,4,7,6,1,0,3,2,13,12,15,14,9,8,11,10,},{6,7,4,5,k,3,0,1,14,15,12,13,10,11,8,9,},{7,6,5,4,3,2,1,0,15,14,13,12,11,10,9,8,},{8,9,10,11,12,13,14,15,0,1,2,3,4,5,6,7,},{9,8,11,10,13,12,15,14,1,l,3,2,5,4,7,6,},{10,11,8,9,14,15,12,13,2,3,0,1,6,7,4,5,},{11,10,9,8,15,14,13,12,3,2,1,0,7,6,5,4,},{12,13,14,15,8,9,10,11,n,5,6,7,0,1,2,3,},{13,12,15,14,9,8,11,10,5,4,7,6,1,0,3,2,},{14,15,12,13,10,11,8,9,6,7,4,5,2,3,0,1,},{15,14,13,12,11,10,9,8,7,6,5,4,3,2,1,0,},nil,nil}r=664 end end else if r<=485 then z=(unpack or table.unpack)r=508 else if r>513 then bq={}r=578 else r=536 bg=tonumber end end end else if r>=404 then if r>=423 then if r<462 then r=466 t=math.abs else do bd=math.floor end r=485 end else r=423 ba=(function(b,e,e)if'number'==x(b)then return true else return false end end)end else if r>357 then r=404 x=type else br=select r=384 end end end else if r>=160 then if r<=225 then if r<=160 then do be=string.rep end r=201 else if r>210 then cc=table.insert r=256 else r=225 y=table.concat end end else if r>=288 then if r<324 then r=331 do u=(getfenv or function()return _ENV end)end else do cd=setmetatable end r=354 end else bs=math.ldexp r=288 end end else if r>=101 then if r>=116 then if r<142 then do bc=string.sub end r=144 else do bf=string.gsub end r=160 end else do bw=string.char end r=116 end else if r<73 then r=82 s,t,u,v,w,x,y,z,ba,bb,bc,bd,be,bf,bg,bh,bi,bj,bk,bl,bm,bn,bo,bp,bq,br,bs,bt,bu,bv,bw,bx,by,bz,ca,cb,cc,cd,ce=nil else bn=string.byte r=101 end end end end else if r<=1020 then if r<=777 then if r>=722 then if r>=745 then if r>749 then for b=1,31 do bh[b]=bo bo=(bo*2)end r=819 else bo=2 r=777 end else do bh={[0]=1}end r=745 end else if r<691 then r=697 bk=''else r=722 w=(2^52)end end else if r>=932 then if r<=932 then r=978 bx=1 else if r<1013 then v=function()local b,e,g,i b,i,e,g=bn(ce,bx,(bx+3))bx=(bx+4);return((g*16777216)+(e*65536)+(i*256)+b);end r=1020 else r=1061 cb=function()local b b=bn(ce,bx,bx)bx=(bx+1);return b;end end end else if r<=819 then r=866 bb=function(b,e,g,i,i)local i,k,l=39,54,54,62,52,10,47,34,61,48,27,58,39 while i~=26 do if k<=126 then if k<=54 then k=98 l=nil else if k>104 then k=159 l=((e/bh[b])%bh[g])else l=nil k=126 end end else if k>=184 then if k<215 then k=223 do return l end else break end else k=184 l=(l-l%1)end end end end else if r>873 then r=932 bj=function(b,e,g,i,i)local i i=((b/2^(e-1))%2^((g-1)-(e-1)+1))do return(i-i%1);end end else r=899 bt=(bit_lib and bit_lib.bxor or function(b,e)b=b%(2^32)e=e%(2^32)local g,i=0,1 while b>0 and e>0 do local k,l=b%16,e%16 g=g+s[k+1][l+1]*i b=(b-k)/16 e=(e-l)/16 i=i*16 end g=g+b*i+e*i return g end)end end end end else if r>=1204 then if r>=1257 then if r<=1257 then r=1282 ca=function(b,e,g,i,i)local i,k,l,n,o do k=b[5]end l=b[197]i=bi n=b[106]o=b[174]return function(...)local b,i,p,s,t,x,y,ba,bc do y=1 end b=-1 do t=-1 end do p={}end do bc={...}end i=(br('#',...)-1)x={}s={}do for t=0,i do if(not(t<o))then p[(t-o)]=bc[(t+1)];else do s[t]=bc[(t+1)];end end;end;end ba=(i-o+1)while true do local i,o,p,t,ba,bc,bd,be,bf,bg ba=n[y]do be=ba[140]end bg=ba[50]o=ba[129]t=ba[14]p=ba[d]i=ba[90]bf=ba[183]bd=ba[11]bc=ba[191]if not(be>19)then do if not(ba[140]<10)then if not(be<15)then if not(ba[140]>16)then if 15==be then local d,i,n,t do i=o end d,n=bv(s[i](z(s,(i+1),bd)))b=(n+i-1)t=0 do for n=i,b do t=(t+1);s[n]=d[t];end;end else do return s[o]end end else if not(be<18)then if(be>18)then local d,i,n do i=ba[129]end d=s[i]n=s[(i+2)]if((n>0))then do if((d>s[i+1]))then y=bd;else s[(i+3)]=d;end end elseif((d<s[i+1]))then do y=ba[11];end else do s[(i+3)]=d;end end else s[o]=g[k[bd]];end else local d,i,n i=ba[129]d=s[(i+2)]n=(s[i]+d)s[i]=n;if((d>0))then while(n<=s[i+1])do y=bd;s[i+3]=n;break end elseif(not(n<s[i+1]))then y=bd;s[(i+3)]=n;end end end else if not(be>11)then if(be>10)then s[o]=(s[bd]-s[p]);else do s[o][k[ba[11]]]=s[p];end end else if not(be<13)then if not(be~=13)then s[o][k[bd]]=k[p];else s[o]=s[bd][k[p]];end else local d d=ba[f]s[d]=s[d](s[d+1]);end end end else if not(be>4)then if not(ba[140]>1)then if(be<1)then s[o]=e[bd];else do s[o]=s[bd][s[p]];end end else if not(be<j)then do if(be<4)then while(s[ba[129]]~=s[p])do y=bd;break end else k=bi[o](k)end end else s[o]=(s[bd]%k[p]);end end else do if not(be>6)then if(be<6)then if(k[p]~=s[o])then y=bd;end;else s[o]={};end else if not(be<8)then if(be>8)then local d,f d=ba[129]f=s[bd]s[(d+1)]=f;s[d]=f[k[p]];else local d,f,i f=l[ba[11]]i=nil d={}i=cd({},{__index=function(j,j)local j=d[j];return j[1][j[2]];end,__newindex=function(j,j,n)local j=d[j]j[1][j[2]]=n;end;});do for j=1,p do local n n=ba[51][j]if n[1]then d[(j-1)]={s,n[2],nil,nil};else d[(j-1)]={e,n[2],nil,nil};end;x[(#x+1)]=d;end;end s[o]=ca(f,i,g);end elseif not s[o]then do y=bd;end end end end end end end else if not(be>29)then if not(be>24)then if not(be<22)then do if not(be>22)then y=bd;else if not(be~=23)then local d do d=o end s[d](z(s,(d+1),bd))else local d d=o s[d]=s[d](z(s,d+1,bd));end end end else if 20==ba[140]then do s[o]=(s[bd]/k[p]);end else s[o][s[bd]]=s[p];end end else if not(be>26)then if(be<26)then if s[o]then y=bd;end;else s[o]=(s[bd]*k[p]);end else if not(be<a)then if 28==be then if(k[p]==s[ba[129]])then do y=bd;end end;else s[o]=(s[ba[11]]+s[p]);end else do s[o]=(s[bd]+k[p]);end end end end else if not(ba[140]<35)then if not(be<38)then if not(ba[140]>38)then local a do a=ba[129]end do s[a]=s[a](z(s,a+1,b));end else if(be<40)then if((k[o]<s[p]))then y=bd;end;else local a,b b=bd a=s[b]for d=(b+1),p do a=(a..s[d]);end;s[o]=a;end end else do if not(be<36)then if m==be then do s[o]();end else s[o]=s[bd];end else local a a={}if(#x>0)then for b=1,#x do local d d=x[b]for b=0,#d do local e,f,i i=d[b]e=i[1]f=i[2]if(e==s and f>=0)then a[f]=e[f]i[1]=a end end end end return 0,ba[p],1;end end end else if not(be>31)then if(be<31)then s[o]=ca(l[bd],nil,g);else s[o]=#s[bd];end else do if not(be<33)then do if(be>33)then s[o]=nil;else do while(s[ba[129]]<s[p])do y=bd;break end end end end else s[o]=k[bd]end end end end end end do y=(y+1);end end;end;end else if r>1285 then q=81;else r=1298 return ca(bu(u()),{},u())();end end else if r<=1204 then r=1225 bu=function(a,b,b,b)local b,d,e,f,g,i,j,k=80,46,39,29,67,46,47,79,21,94,82,54,72,27,68,61,78,90,12,54,72,60,25,92 while b~=46 do if d>=254 then if d>=413 then if d<=461 then if d>422 then for l=1,v()do local m,n,o,p,q,s=58,63,55,96,68,58,34,38,83,76,55,52,40,69,36,95,24,78,42,24,41,39,68,95,34,13 while m~=44 do if n>=364 then if n<=470 then if n<=398 then if n>371 then p[129]=bj(o,3,11);n=429 else n=398 p[140]=bj(s,1,11);end else if n<468 then p[11]=bj(s,12,33);n=470 else n=512 p[80]=bj(o,21,29);end end else if n>=583 then if n<=583 then n=624 p[191]=-p[80]else if n>632 then m=44;else n=656 f[l]=p;end end else if n>520 then n=583 p[183]=-p[129]else p[90]=bj(o,12,20);n=554 end end end else if n>=222 then if n>=264 then if n<=264 then do s=v()end n=304 else if n<320 then do q=bj(o,1,2)end n=327 else p[62]=q n=364 end end else if n>225 then o=v()n=264 else n=243 if 1==cb()then for l=1,cb()do do p[51][l]={cb()==0,v()}end end end end end else if n>=139 then if n>144 then n=222 p[51]={};else n=174 p[h]=cb();end else if n>67 then n=139 p={{},nil}else o,p,q,s=nil n=106 end end end end end end d=508 else k[5]=g d=461 end else if d>=541 then if d>549 then b=46;else d=560 return k;end else k[106]=f;d=541 end end else if d<=295 then if d<286 then d=295 k[174]=cb();else e=v()d=340 end else if d<378 then g={}d=387 else do for b=1,e do local h,l,m,n=63,49,79,91,55,79,48,14,16,66,21,83,19,46 while h~=38 do if l>=174 then if l>=192 then if l<199 then l=208 g[b]=n;else break end else l=192 do if(2==m)then n=(0~=cb());elseif(0==m)then n=bz();elseif(not(m~=4))then do n=bm();end elseif(3==m)then n=a[bm()];end;end end else if l<=49 then l=97 m,n=nil else if l>106 then l=174 n=nil else m=cb()l=144 end end end end end end d=413 end end end else if d>=149 then if d<=173 then if d<171 then do i=v()end d=173 else d=199 for a=(#bp+1),(#bp+i)do local b,h,l,m,n=85,62,16,52,55,52,35,38,27,90,24,32,91,28,53,39,45,99,23,73,47,85,70 while b~=48 do if h<=222 then if h>=170 then if h<=189 then if h<184 then do n=v()end h=189 else h=205 l[90]=cb();end else if h<213 then do l[62]=bj(m,1,2);end h=222 else h=238 do l[140]=bj(n,1,11);end end end else if h>=129 then if h>135 then m=v()h=170 else l[50]=cb();h=148 end else if h>65 then l={}h=129 else h=109 l,m,n=nil end end end else if h>=315 then if h>=371 then if h>377 then break else h=404 bp[a]=l;end else if h<342 then l[183]=-l[129]h=345 else h=371 l[191]=-l[80]end end else if h>=273 then if h>275 then h=315 l[11]=bj(n,12,33);else h=297 l[80]=bj(m,21,29);end else if h<249 then h=254 l[129]=bj(m,3,11);else l[14]=bj(m,12,20);h=273 end end end end end end end else if d>203 then d=254 k[197]=j;else d=234 for a=1,v()do j[a-1]=bu();end end end else if d>=99 then if d<111 then d=114 j={}else k={}d=149 end else if d<53 then e,f,g,i,j,k=nil d=62 else f={}d=99 end end end end end end else if r<1237 then r=1241 bi={}else r=1257 do by={}end end end end else if r<=1079 then if r>1065 then bz=function()local a,b,d,e,f,g,h,i=72,56,93,13,24,87,51,58,51,82,38,69,47,38,57,68,14,29,87 while a~=36 do if b>=199 then if b<=269 then if b>=239 then if b<263 then b=269 f=(bb(0,e,20)*4294967296+d)else b=300 do i=1 end end else h=bb(20,e,11)b=239 end else if b>=326 then if b<371 then b=374 return(g*(2^(h-1023))*(f/w+i))else break end else if not(h~=0)then if not(f==0)then do h=1 end i=0 else return(g*0)end elseif not(h==2047)then else do if not(f~=0)then do return(g*(0/0))end else return(g*(1/0))end end end b=326 end end else if b>=131 then if b<=131 then e=v()b=147 else if b<171 then if((d==0 and e==0))then return 0 end b=178 else g=((-1)^bb(31,e,1))b=199 end end else if b>64 then do d=v()end b=131 else b=105 d,e,f,g,h,i=nil end end end end end r=1101 else bl=function()local a,b b,a=bn(ce,bx,(bx+2))bx=(bx+2);return((a*256)+b);end r=1079 end else if r<=1101 then bm=function(a,a,a)local a,b,d,e=72,59,88,65,35,55,96,90,85,50,23,67,84,54 while a~=36 do if b>=175 then if b>=198 then if b>206 then a=36;else b=213 return d;end else b=198 bx=(bx+e);end else if b>=107 then if b<146 then e=v()b=153 else d=ce:sub(bx,(bx+e-c))b=175 end else b=107 d,e=nil end end end end r=1136 else if r<1157 then bv=function(...)return{...},br('#',...)end r=1166 else r=1204 bp={}end end end end end end end end)(28,255,1,80,12,129,2,50,13,3,2,0,36,4,8,10)
